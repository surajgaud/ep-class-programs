1.1	Write a function that converts a positive integer to its binary number. 
int dectobinary(int )
{
	int r;    
           if(x <= 1)
	 {
		cout << x;
		return;
	}

	r = x%2;    //check if mod 2 and then load binary into r and                  display
	dectobinary(x >> 1);    
	cout << r;

Sample output
Enter a positive integer: 17
17 converted to binary is: 10001

Enter a positive integer: 21
21 converted to binary is: 10101






2.1 Write a function to calculate the integer x raised to the power of n
int power(int x, int n)
The following function calculates the x raise to n 
The loop checks if the input equals 1 or numbers that are mod 2 or not and then calculates accordingly

int power(int x, int n)      // operation of the function power
{
    if( n == 0)
        return 1;
    else if (n%2 == 0)
        return power(x , n/2)*power(x ,n/2);  
    else
        return x*power(x, n/2)*power(x, n/2);
 
}
Sample output
Enter a base number: 6
Enter the power: 3
The answer of  6^3is:  216

2.2 Overlaod the function as:
double power(double, int)
double power(double, double)











3. Write a program that would sort an integer array of 20 elements using insertion sort.
Discuss the execution speed of Insertion Sort and Bubble Sort.
Bubble sort algorithm is simple, it is too slow and impractical for most problems even when compared to insertion sort, which is faster
The following loop compares the array with another array created starting from zero and then swaps the compared value and displays the result
for(a=1;a<=x-1;a++)  //start comapring 
		pos=a;
		while(pos>0 && (array[pos]<array[pos-1])) //compare two numbers and swap and check the numbers postion
           temp=array[pos];            
		   array[pos]=array[pos-1];
		   array[pos-1]=temp;
		   pos--;
enter 20 random integers
20
8
7
6
8
4
2
1
0
21
17
15
13
11
10
99
85
70
69
63
27
sorted random numbers
0 1 2 4 6 7 8 8 10 11 13 15 17 21 27 63 69 70 85 99

4.1 Write a function to calculate the inverse of a 2x2 matrix.

The following function calculates the determinant and then calculates the adjoint and then multiplies adjoint and determinant and then displays the answer
    d= a[0][0]*a[1][1]-a[0][1]*a[1][0];  //calculate the determinant
     cout<<"determinant is :"<<d;  // display the determinant
     cout<<endl;
     
     //calculation of adjoint 
     
     a[0][1]=-a[0][1];a[1][0]=-a[1][0];
     t=a[1][1];a[1][1]=a[0][0];a[0][0]=t; //swap the numbers
sample output
enter the values in the matrix:
col 0 row 0 : 2
col 0 row 1 : 3
col 1 row 0 : 4
col 1 row 1 : 5
determinant is :-2
Inverse of folowing 2x2 matrix is

-2.5  1.5
2  -1













4.2 Solve the given circuit using the function. Units for power sources should be in volts and the resisters in ohms.
Test for B1= 5, B2= 5, R1=100, R2=300 and R3=200.

The following loop calculates the value of current using the kirchoff’s laws

  d= (r[0][0]*r[1][1])-(r[0][1]*r[1][0]);  //calculate the determinant
   //cout<<"determinant is :"<<d;  // display the determinant
   //cout<<endl;
   
   c[0][0] = (r[1][1])/d;
   c[1][1] = -r[0][1]/d;
   c[0][1] = -r[1][0]/d;
   c[1][0] = r[0][0]/d;
   

   
   i1= ((c[0][0]*B1) + (c[0][1]*B2));
   i2= ((c[1][0]*B1) + (c[1][1]*B2));
   i3=i1+i2;

Solution output
enter R1 in ohms:100
enter R2 ohms:300
enter R3 ohms:200
enter B1 volts:5
enter B2 volts:5
current i1 and i2 is 0.00909091, 0.00454545
current through R1 R2 and R3 is 0.00909091, 0.0136364and 0.00454545 respectively

